"0","p.1 = get_marginal_probability(edge1[1], edge1[2], L_inv, A)"
"0",""
"0","data.normal <- data.frame(x= normal.edge1.list)"
"0",""
"0","#create histogram and overlay normal curve"
"0","ggplot(data.normal, aes(x)) +"
"0","  geom_histogram(aes(y = ..density..), fill='lightgray', col='black') +"
"0","  stat_function(fun = dnorm, args = list(mean= N*p.1, sd= sqrt(N*p.1*(1-p.1)))) + "
"0","  xlim(N*p.1 -N/10 , N*p.1 +N/10 ) + "
"0","  geom_vline(xintercept=N*p.1, color = ""red"") +"
"0","  ggtitle(""Histogram of bottleneck edge inclusion for aldous-broder algorithm"") + "
"0","  xlab(""Counts of edge inclusion out of 1000 generated trees"")"
