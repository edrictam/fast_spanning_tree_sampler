---
title: "Reversible Jump MCMC (Competitor)"
format: pdf
---

```{r}
## Load all relevant functions
source("helpers/rjmcmc_sampling_functions.R")

## Set random seed
set.seed(100)

## Read in cleaned dataset
y_pre = read.csv("data/cleaned_data_income_rent.csv")

## Drop the first column, which is just row index
y = data.matrix(y_pre[,2:3])
```

 
```{r}
## Run the RJMCMC sampler

## Get the dimensions of the data
n = dim(y)[1]
p = dim(y)[2]

## In the absence of knowledge on K, take the overfitted approach and set K as n
K = floor(n/4)

## Inverse Wishart prior hyperparameters for Sigma
nu = n
Sigma_0 = 0.2^2*diag(p)
delta = 1/4

## Set birth-death p0 parameter and prior regularization parameter
p0 = 0.1 
tuning = 0.01 

## Main RJMCMC Sampler function
res.rjmcmc = rjmcmc(y, K,niter =5000, nu, Sigma_0, delta, p0, verbose = TRUE, tuning)

## Save Gibbs Output
save(res.rjmcmc, file = "saved_trajectories/rjmcmc_output.RData")
```


